@SpringBootTest
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class S3LoaderServiceTest {

    @SpyBean
    private S3LoaderService s3LoaderService;

    @Test
    public void testSyncTrueEnsuresSingleExecution() throws InterruptedException {
        int threadCount = 5;
        ExecutorService executor = Executors.newFixedThreadPool(threadCount);
        CountDownLatch latch = new CountDownLatch(threadCount);
        Set<String> results = ConcurrentHashMap.newKeySet();

        LocalDate date = LocalDate.now();

        for (int i = 0; i < threadCount; i++) {
            executor.submit(() -> {
                try {
                    String result = s3LoaderService.loadFroms3(1, "Provider", date);
                    results.add(result);
                } finally {
                    latch.countDown();
                }
            });
        }

        latch.await();
        executor.shutdown();

        // Verify that the method was called only once
        verify(s3LoaderService, times(1)).loadFroms3(1, "Provider", date);

        // All threads should get the same result
        assertEquals(1, results.size(), "All threads should receive the same cached result");
    }
}
